<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liuzheng&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-15T06:49:25.535Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>liu zheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>QT编译MYSQL驱动</title>
    <link href="http://example.com/2022/07/14/QT%E7%BC%96%E8%AF%91MYSQL%E9%A9%B1%E5%8A%A8/"/>
    <id>http://example.com/2022/07/14/QT%E7%BC%96%E8%AF%91MYSQL%E9%A9%B1%E5%8A%A8/</id>
    <published>2022-07-14T10:37:46.000Z</published>
    <updated>2022-07-15T06:49:25.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用QT进行C++开发时，会使用到MySQL，但高版本的QT并不支持MySQL（主要因为没有驱动，具体这里的爱恨情仇，博主也不太了解），所以想在QT中使用MySQL要自行手动的编译出MySQL驱动。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>在编译我们的MySQL驱动之前需要准备好如下的几项东西</p><p>1.QT<br>2.MySQL<br>3.QT源代码</p><h2 id="QT"><a href="#QT" class="headerlink" title="QT"></a>QT</h2><p>下载好安装器后需要选择自己的组件进行安装，这里必须要有的就是这个sources组件，当然了如果不确定自己是否安装过sources组件或者需要安装可以打开QT安装目录下的MaintenanceTool进行修改。至于编译套件的选择看个人喜好，<strong>但一定一定一定要注意的事情是编译套件的位数必须和MySQL的位数一致否则后续的编译会失败！！</strong>这里博主以编译套件MinGW 11.2.0 64-bit为例子。（PS：一定要记得自己把QT安在哪里了呀！！）</p><p><img src="1.jpg" alt="QT的安装准备"></p><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><p>MySQL只需要去官网下载最新版本即可<a href="https://dev.mysql.com/downloads/installer/">戳这里进入MySQL下载界面</a></p><p>下载完成后第一个界面选择Custom</p><p>第二个界面中选择一个MySQL Server进行安装，官方为我们提供了8.0、5.7、5.6三个大版本可以选择</p><p>点开选择的MySQL Server后选择小版本，再次强调<strong>一定一定要选择和编译套件一样位数的MySQL安装。</strong></p><h2 id="QT源码"><a href="#QT源码" class="headerlink" title="QT源码"></a>QT源码</h2><p>准备QT源码之前可以看一看自己QT安装目录下\QT\6.3.1\Src\qtbase\src\plugins\sqldrivers\mysql中是否存在mysql.pro文件，如果没有需要自行下载qt-everywhere-src-6.0.3文件<a href="https://download.qt.io/official_releases/qt/6.0/6.0.3/single/">戳这里进入源码下载界面</a></p><h1 id="编译驱动及配置"><a href="#编译驱动及配置" class="headerlink" title="编译驱动及配置"></a>编译驱动及配置</h1><h2 id="修改项目文件"><a href="#修改项目文件" class="headerlink" title="修改项目文件"></a>修改项目文件</h2><p>解压下载好的QT源码按照\QT\6.0.3\Src\qtbase\src\plugins\sqldrivers\mysql找到mysql.pro文件打开，<strong>使用和MySQL相同位数的编译套件进行编译</strong>，如果你正确的打开文件后那么项目栏应该是这样子滴。 </p><p><img src="2.jpg" alt="项目目录"> </p><p>打开mysql.pro文件进行如下修改</p><p><img src="3.jpg" alt="修改项目文件1"></p><figure class="highlight qt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LIBS += -L<span class="string">&quot;C:\Program Files\MySQL\MySQL Server 8.0\lib&quot;</span> -llibmysql</span><br><span class="line">INCLUDEPATH += <span class="string">&quot;C:\Program Files\MySQL\MySQL Server 8.0\include&quot;</span></span><br><span class="line">DEPENDPATH += <span class="attribute">C</span>:\Program Files\MySQL\MySQL Server <span class="number">8.0</span>\include </span><br></pre></td></tr></table></figure><p>这里有一个坑是如果MySQL安装路径中有空格那么LIBS和INCLUDEPATH后的路径一定要用“”（双引号）引起再打开qsqldriverbase.pri文件进行如下修改</p><p><img src="4.jpg" alt="修改项目文件2"></p><p>之后点击左下脚的构建（小榔头图标）</p><h2 id="配置驱动"><a href="#配置驱动" class="headerlink" title="配置驱动"></a>配置驱动</h2><p>你编译好的驱动躺在你安装QT的盘符下的plugins文件夹中，比如博主的QT安装在了D盘，那么只要进入D盘就可以清楚地看见plugins文件夹，在.\plugins\sqldrivers中找到这三个小家伙，他们就是我们历经千辛万苦所编译出来的宝贵驱动文件。</p><p><img src="5.jpg" alt="驱动位置"></p><p>将他们复制粘贴到（你的QT安装的位置）\QT\6.3.1\Src\qtbase\src\plugins\sqldrivers中</p><p><img src="6.jpg" alt="驱动安放位置"></p><p>做到这里恭喜你你已经完成了80%的工作了！！</p><p>打开找到下面两个文件。</p><p><img src="7.jpg" alt="创建QT项目"></p><p>把他们放到你QT安装路径下\QT\6.3.1\mingw_64\bin中</p><p><img src="8.jpg" alt="创建QT项目"></p><p>新建一个QT项目，在第二步的时候将CMake改为qmake。高版本的QT逐渐抛弃了qmake，之后也会考虑出一片文章介绍一下这个事情，不过这里我们还是先用qmake。创建完成后要运行一次程序点击左下角的三角符号运行。</p><p><img src="9.jpg" alt="创建QT项目"></p><p>建好以后会出现两个文件夹。</p><p><img src="10.jpg" alt="创建成功的文件夹"></p><p>接着打开你的MySQL安装路径找到Connector C++ 8.0文件夹打开其中的lib64文件夹找到这两个文件。</p><p><img src="11.jpg" alt="所需要的文件"></p><p>放在.\build-demo-Desktop_Qt_6_3_1_MinGW_64_bit-Debug\debug中</p><p><img src="12.jpg" alt="文件放置位置"></p><p>这一步操作的原因是因为MySql 8.0 之后的版本，提高了客户端和服务器数据通信的安全性，对通信数据做了加密，我们需要添加这两个文件（动态库），这里博主发现了一个现象等你再一次新建一个项目时不添加也可以成功运行一个MySQL程序，可能这就是<del>爱的</del>信任的力量。</p><h1 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h1><p>OK！至此所有编译与配置都已经完成了接下来进行一个简单的测试</p><p>首先打开项目的pro文件在第一行代码最后添加“sql”</p><p><img src="13.jpg" alt="文件放置位置"></p><p>测试代码（全选复制粘贴到mainwindow.cpp，记得修改数据库的密码和数据库的名字）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;QtSql/QSqlDatabase&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QSqlError&gt;</span></span></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">        QSqlDatabase db = QSqlDatabase::<span class="built_in">addDatabase</span>(<span class="string">&quot;QMYSQL&quot;</span>);</span><br><span class="line">        db.<span class="built_in">setHostName</span>(<span class="string">&quot;127.0.0.1&quot;</span>); <span class="comment">// 本地连接</span></span><br><span class="line">        db.<span class="built_in">setPort</span>(<span class="number">3306</span>);       <span class="comment">// 如果使用的是默认端口可以不设置</span></span><br><span class="line">        db.<span class="built_in">setUserName</span>(<span class="string">&quot;root&quot;</span>);<span class="comment">// 数据库用户名</span></span><br><span class="line">        db.<span class="built_in">setPassword</span>(<span class="string">&quot;*******&quot;</span>); <span class="comment">// 数据库密码</span></span><br><span class="line">        db.<span class="built_in">setDatabaseName</span>(<span class="string">&quot;*******&quot;</span>); <span class="comment">// 数据库名字</span></span><br><span class="line">        <span class="keyword">if</span>(db.<span class="built_in">open</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="string">&quot;打开数据库&quot;</span>, <span class="string">&quot;数据库打开成功, 可以读写数据了......&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            QString msg = <span class="string">&quot;数据库打开失败: &quot;</span> + db.<span class="built_in">lastError</span>().<span class="built_in">text</span>();</span><br><span class="line">            QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="string">&quot;打开数据库&quot;</span>, msg);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="14.jpg"></p><p>至此QT可以使用MYSQL</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在使用QT进行C++开发时，会使用到MySQL，但高版本的QT并不支持MySQL（主要因为没有驱动，具体这里的爱恨情仇，博主也不太了解），所</summary>
      
    
    
    
    <category term="QT" scheme="http://example.com/categories/QT/"/>
    
    
    <category term="QT" scheme="http://example.com/tags/QT/"/>
    
  </entry>
  
</feed>
